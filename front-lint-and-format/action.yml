name:
  Node setup, install, lint and format

description: >
  Node setup, install, lint and format

inputs:
  node-version:
    required: false
    description: >
      Node version to use, will be passed to actions/setup-node.
      For more info see: https://github.com/actions/setup-node#supported-version-syntax
    default: "20"
  install-command:
    required: false
    description: Command to install all dependencies required for formatting and linting
    default: "npm install"
  format-command:
    required: false
    description: Command to check the formatting
    default: "npm run format-check"
  lint-command:
    required: false
    description: Command to run linter(s)
    default: "npm run lint"
  npm-clean-install:
    required: false
    description: Whether to clean install npm packages to avoid issues with optional dependencies
    default: "true"

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node-version }}

    - name: Update npm
      run: npm install -g npm@latest
      shell: bash

    - name: Clean install (if npm-clean-install is true)
      if: inputs.npm-clean-install == 'true'
      id: clean-install
      run: |
        if [ -f "package-lock.json" ]; then
          rm package-lock.json
        fi
        if [ -d "node_modules" ]; then
          rm -rf node_modules
        fi
        npm install --no-optional
      shell: bash

    - name: Install dependencies (if npm-clean-install is false)
      if: inputs.npm-clean-install != 'true'
      id: regular-install
      run: ${{ inputs.install-command }}
      shell: bash

    - name: Check format
      run: ${{ inputs.format-command }}
      shell: bash

    - name: Lint
      if: success() || (failure() && (steps.clean-install.conclusion == 'success' || steps.regular-install.conclusion == 'success'))
      run: ${{ inputs.lint-command }}
      shell: bash